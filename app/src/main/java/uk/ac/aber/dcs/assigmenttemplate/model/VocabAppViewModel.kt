package uk.ac.aber.dcs.assigmenttemplate.modelimport android.app.Applicationimport androidx.compose.runtime.Composableimport androidx.compose.runtime.Stateimport androidx.compose.runtime.getValueimport androidx.compose.runtime.livedata.observeAsStateimport androidx.compose.runtime.rememberUpdatedStateimport androidx.lifecycle.AndroidViewModelimport androidx.lifecycle.LiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport kotlinx.coroutines.launchimport uk.ac.aber.dcs.assigmenttemplate.datasource.WordRepositoryclass VocabAppViewModel(application: Application) : AndroidViewModel(application) {    private val repository: WordRepository = WordRepository(application)    //Stores native and foreign language so they can be accessed by all screens    var nativeLanguage: String = ""    var foreignLanguage:String = ""    //Used to set the value for the global variables    fun setNative(native:String){        nativeLanguage = native    }    fun setForeign(foreign:String){        foreignLanguage = foreign    }    //Returns random word from database    //gets all words and translations    var wordList: LiveData<List<Word>> = repository.getAllWords()    //insert word and translation    fun insertWord(word: Word) = viewModelScope.launch {       // println(word.native)       // println(word.foreign)        repository.insert(word)        // println(word.native)    }    //delete word and translation    fun delete(word: Word) = viewModelScope.launch {        repository.deleteWord(word)    }    //delete all words    fun deleteAll() = viewModelScope.launch {        repository.deleteAll()    }}